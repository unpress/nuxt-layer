[
  {
    "title": "2.docs",
    "children": [
      {
        "title": "alert",
        "_path": "2.docs/alert.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4\"}\n  ::alert{icon=\"lucide:info\"}\n    A **default** alert with `code` and a [link](/).\n  ::\n\n  ::alert{type=\"secondary\" icon=\"lucide:info\"}\n    A **secondary** alert with `code` and a [link](/).\n  ::\n  ::\n  ```mdc\n  ::alert{icon=\"lucide:info\"}\n    A **default** alert with `code` and a [link](/).\n  ::\n\n  ::alert{type=\"secondary\" icon=\"lucide:info\"}\n    A **secondary** alert with `code` and a [link](/).\n  ::\n  ```\n::\n\n### Link\n\n::stack\n  ::div{class=\"p-4\"}\n  ::alert{to=\"https://github.com/ZTL-UwU/shadcn-docs-nuxt\" target=\"_blank\" icon=\"lucide:link\"}\n    A **link** alert.\n  ::\n  ::\n  ```mdc\n  ::alert{to=\"https://github.com/ZTL-UwU/shadcn-docs-nuxt\" target=\"_blank\" icon=\"lucide:link\"}\n    A **link** alert.\n  ::\n  ```\n::\n\n### Variants\n\n::tabs{variant=\"line\"}\n  ::stack{label=\"info\" icon=\"lucide:info\"}\n    ::div{class=\"p-3\"}\n    ::alert{type=\"info\" icon=\"lucide:info\"}\n      An **info** alert with `code` and a [link](/).\n    ::\n    ::\n    ```mdc\n    ::alert{type=\"info\" icon=\"lucide:info\"}\n      An **info** alert with `code` and a [link](/).\n    ::\n    ```\n  ::\n\n  ::stack{label=\"note\" icon=\"lucide:pencil\"}\n    ::div{class=\"p-3\"}\n    ::alert{type=\"note\" icon=\"lucide:pencil\"}\n      A **note** alert with `code` and a [link](/).\n    ::\n    ::\n    ```mdc\n    ::alert{type=\"note\" icon=\"lucide:pencil\"}\n      A **note** alert with `code` and a [link](/).\n    ::\n    ```\n  ::\n\n  ::stack{label=\"success\" icon=\"lucide:lightbulb\"}\n    ::div{class=\"p-3\"}\n    ::alert{type=\"success\" icon=\"lucide:lightbulb\"}\n      A **success** alert with `code` and a [link](/).\n    ::\n    ::\n    ```mdc\n    ::alert{type=\"success\" icon=\"lucide:lightbulb\"}\n      A **success** alert with `code` and a [link](/).\n    ::\n    ```\n  ::\n\n  ::stack{label=\"example\" icon=\"lucide:test-tube\"}\n    ::div{class=\"p-3\"}\n    ::alert{type=\"example\" icon=\"lucide:test-tube\"}\n      An **example** alert with `code` and a [link](/).\n    ::\n    ::\n    ```mdc\n    ::alert{type=\"example\" icon=\"lucide:test-tube\"}\n      An **example** alert with `code` and a [link](/).\n    ::\n    ```\n  ::\n\n  ::stack{label=\"warning\" icon=\"lucide:triangle-alert\"}\n    ::div{class=\"p-3\"}\n    ::alert{type=\"warning\" icon=\"lucide:triangle-alert\"}\n      A **warning** alert with `code` and a [link](/).\n    ::\n    ::\n    ```mdc\n    ::alert{type=\"warning\" icon=\"lucide:triangle-alert\"}\n      A **warning** alert with `code` and a [link](/).\n    ::\n    ```\n  ::\n\n  ::stack{label=\"danger\" icon=\"lucide:circle-x\"}\n    ::div{class=\"p-3\"}\n    ::alert{type=\"danger\" icon=\"lucide:circle-x\"}\n      A **danger** alert with `code` and a [link](/).\n    ::\n    ::\n    ```mdc\n    ::alert{type=\"danger\" icon=\"lucide:circle-x\"}\n      A **danger** alert with `code` and a [link](/).\n    ::\n    ```\n  ::\n::\n\n### Title\n\n::stack\n  ::div{class=\"p-4\"}\n  ::alert{title=\"Title\" icon=\"lucide:layout-list\"}\n    An alert with a title.\n  ::\n  ::\n  ```mdc\n  ::alert{title=\"Title\" icon=\"lucide:layout-list\"}\n    An alert with a title.\n  ::\n  ```\n::\n\n## Props\n\n::field-group\n  :field{name=\"title\" type=\"string\"}[Alert title]\n  :field{name=\"icon\" type=\"string\"}[Alert icon]\n  :field{name=\"type\" type=\"'default' | 'info' | 'warning' | 'success' | 'danger' | 'secondary'\" default-value=\"'default'\"}\n  :field{name=\"to\" type=\"string\"}[Link URL]\n  :field{name=\"target\" type=\"Target\"}[A `target` attribute value to apply on the link]\n  :field{name=\"external\" type=\"boolean\"}[Alias to `target='_blank'`]\n  :field{name=\"showLinkIcon\" type=\"boolean\" default-value=\"true\"}[Whether to show the link indicator :icon{name=\"lucide:arrow-up-right\"}]\n::\n",
        "icon": "lucide:triangle-alert",
        "badges": [
          {
            "value": "Docus",
            "to": "https://docus.dev/api/components#alert",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Alert.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "Badge",
        "_path": "2.docs/badge.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-3\"}\n  ::badge\n    Default\n  ::\n  ::badge{size=\"sm\"}\n    Small\n  ::\n  ::\n  ```mdc\n  ::badge\n    Default\n  ::\n  ::badge{size=\"sm\"}\n    Small\n  ::\n  ```\n::\n\n### Variants\n\n::tabs{variant=\"line\"}\n  ::stack{label=\"outline\"}\n    ::div{class=\"p-3\"}\n    :badge[Outline]{variant=\"outline\"}\n    ::\n    ```mdc\n    :badge[Outline]{variant=\"outline\"}\n    ```\n  ::\n\n  ::stack{label=\"secondary\"}\n    ::div{class=\"p-3\"}\n    :badge[Secondary]{variant=\"secondary\"}\n    ::\n    ```mdc\n    :badge[Secondary]{variant=\"secondary\"}\n    ```\n  ::\n\n  ::stack{label=\"info\"}\n    ::div{class=\"p-3\"}\n    :badge[Info]{type=\"info\"}\n    ::\n    ```mdc\n    :badge[Info]{type=\"info\"}\n    ```\n  ::\n\n  ::stack{label=\"warning\"}\n    ::div{class=\"p-3\"}\n    :badge[Warning]{type=\"warning\"}\n    ::\n    ```mdc\n    :badge[Warning]{type=\"warning\"}\n    ```\n  ::\n\n  ::stack{label=\"success\"}\n    ::div{class=\"p-3\"}\n    :badge[Success]{type=\"success\"}\n    ::\n    ```mdc\n    :badge[Success]{type=\"success\"}\n    ```\n  ::\n\n  ::stack{label=\"lime\"}\n    ::div{class=\"p-3\"}\n    :badge[lime]{type=\"lime\"}\n    ::\n    ```mdc\n    :badge[lime]{type=\"lime\"}\n    ```\n  ::\n\n  ::stack{label=\"danger\"}\n    ::div{class=\"p-3\"}\n    :badge[Danger]{type=\"danger\"}\n    ::\n    ```mdc\n    :badge[Danger]{type=\"danger\"}\n    ```\n  ::\n::\n\n### Link\n\n::stack\n  ::div{class=\"p-3\"}\n  ::badge{variant=\"outline\" type=\"info\" to=\"https://github.com/ZTL-UwU/shadcn-docs-nuxt\" target=\"_blank\"}\n  Link\n  ::\n  ::\n  ```mdc\n  ::badge{variant=\"outline\" type=\"info\" to=\"https://github.com/ZTL-UwU/shadcn-docs-nuxt\" target=\"_blank\"}\n  Link\n  ::\n  ```\n::\n\n## Props\n\n::field-group\n  :field{name=\"type\" type=\"'default' | 'info' | 'warning' | 'success' | 'danger' | 'lime'\" default-value=\"'default'\"}\n  :field{name=\"variant\" type=\"'default' | 'secondary' | 'destructive' | 'outline'\" default-value=\"'default'\"}\n  :field{name=\"size\" type=\"'md' | 'sm'\" default-value=\"'md'\"}\n  :field{name=\"to\" type=\"string\"}[Link URL]\n  :field{name=\"target\" type=\"Target\"}[A `target` attribute value to apply on the link]\n::\n",
        "icon": "lucide:badge",
        "badges": [
          {
            "value": "Docus",
            "to": "https://docus.dev/api/components#badge",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Badge.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "Button Link",
        "_path": "2.docs/button-link.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-3 flex gap-4\"}\n  ::button-link{right-icon=\"lucide:arrow-up-right\" to=\"/getting-started\" target=\"_blank\"}\n    Get Started\n  ::\n  ::button-link{left-icon=\"lucide:github\" variant=\"outline\" to=\"https://github.com/ZTL-UwU/shadcn-docs-nuxt\" target=\"_blank\"}\n    GitHub\n  ::\n  ::button-link{left-icon=\"lucide:ghost\" variant=\"ghost\" href=\"https://github.com/ZTL-UwU/shadcn-docs-nuxt\" blank}\n    Ghost\n  ::\n  ::\n  ```mdc\n  ::button-link{right-icon=\"lucide:arrow-up-right\" to=\"/getting-started\" target=\"_blank\"}\n    Get Started\n  ::\n  ::button-link{left-icon=\"lucide:github\" variant=\"outline\" to=\"https://github.com/ZTL-UwU/shadcn-docs-nuxt\" target=\"_blank\"}\n    GitHub\n  ::\n  ::button-link{left-icon=\"lucide:ghost\" variant=\"ghost\" href=\"https://github.com/ZTL-UwU/shadcn-docs-nuxt\" blank}\n    Ghost\n  ::\n  ```\n::\n\n## Props\n\n::field-group\n  :field{name=\"variant\" type=\"'default' | 'secondary' | 'link' | 'destructive' | 'outline' | 'ghost'\" default-value=\"'default'\"}\n  :field{name=\"size\" type=\"'default' | 'icon' | 'sm' | 'xs' | 'lg'\" default-value=\"'default'\"}\n  :field{name=\"leftIcon\" type=\"string\"}[Icon on the left]\n  :field{name=\"rightIcon\" type=\"string\"}[Icon on the right]\n  :field{name=\"to\" type=\"string\"}[Link URL]\n  :field{name=\"href\" type=\"string\"}[Alias to `to`]\n  :field{name=\"target\" type=\"Target\"}[A `target` attribute value to apply on the link]\n  :field{name=\"blank\" type=\"boolean\"}[Alias to `target='_blank'`]\n::\n",
        "icon": "lucide:external-link",
        "badges": [
          {
            "value": "Docus",
            "to": "https://docus.dev/api/components#buttonlink",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/ButtonLink.vue",
            "target": "_blank"
          },
          {
            "value": "0.6.5"
          }
        ]
      },
      {
        "title": "Callout",
        "_path": "2.docs/callout.md",
        "content": "\n\n::alert{to=\"/components/docs/alert\"}\n`::callout`{lang=\"mdc\"} is an alias to `::alert`{lang=\"mdc\"}.\n::\n",
        "icon": "lucide:megaphone",
        "badges": [
          {
            "value": "Nuxt UI Pro",
            "to": "https://ui.nuxt.com/pro/prose/callout",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Callout.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "Card",
        "_path": "2.docs/card.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4\"}\n  ::card\n  ---\n  icon: lucide:box\n  ---\n\n  #title\n  Card Title\n\n  #description\n  Description\n\n  #content\n  Beautifully designed **Nuxt Content** template with **shadcn-vue**. _Customizable. Compatible. Open Source._\n\n  #footer\n  Footer\n  ::\n  ::\n  ```mdc\n  ::card\n  ---\n  icon: lucide:box\n  ---\n\n  #title\n  Card Title\n\n  #description\n  Description\n\n  #content\n  Beautifully designed **Nuxt Content** template with **shadcn-vue**. _Customizable. Compatible. Open Source._\n\n  #footer\n  Footer\n  ::\n  ```\n::\n\n### Link\n\n::stack\n  ::div{class=\"p-4\"}\n  ::card\n  ---\n  to: https://github.com/ZTL-UwU/shadcn-docs-nuxt\n  target: _blank\n  # showLinkIcon: false\n  ---\n\n  #title\n  Link Card\n\n  #content\n  Beautifully designed **Nuxt Content** template with **shadcn-vue**. _Customizable. Compatible. Open Source._\n  ::\n  ::\n  ```mdc\n  ::card\n  ---\n  to: https://github.com/ZTL-UwU/shadcn-docs-nuxt\n  target: _blank\n  # showLinkIcon: false\n  ---\n\n  #title\n  Link Card\n\n  #content\n  Beautifully designed **Nuxt Content** template with **shadcn-vue**. _Customizable. Compatible. Open Source._\n  ::\n  ```\n::\n\n### Horizontal\n\n::stack\n  ::div{class=\"p-4\"}\n  ::card\n  ---\n  icon: 'lucide:fold-horizontal'\n  icon-size: 26\n  horizontal: true\n  ---\n\n  #title\n  Horizontal Card\n\n  #description\n  Beautifully designed **Nuxt Content** template with **shadcn-vue**. _Customizable. Compatible. Open Source._\n  ::\n  ::\n  ```mdc\n  ::card\n  ---\n  icon: 'lucide:fold-horizontal'\n  icon-size: 26\n  horizontal: true\n  ---\n\n  #title\n  Horizontal Card\n\n  #description\n  Beautifully designed **Nuxt Content** template with **shadcn-vue**. _Customizable. Compatible. Open Source._\n  ::\n  ```\n::\n\n### Image\n\n::stack\n  ::div{class=\"p-4\"}\n  ::card\n  ---\n  img: /og-nuxt.png\n  ---\n  #title\n  Image Card\n\n  #content\n  Beautifully designed **Nuxt Content** template with **shadcn-vue**. _Customizable. Compatible. Open Source._\n  ::\n  ::\n  ```mdc\n  ::card\n  ---\n  img: /og-nuxt.png\n  ---\n  #title\n  Image Card\n\n  #content\n  Beautifully designed **Nuxt Content** template with **shadcn-vue**. _Customizable. Compatible. Open Source._\n  ::\n  ```\n::\n\n## Props\n\n::field-group\n  :field{name=\"title\" type=\"string\"}[Card title]\n  :field{name=\"description\" type=\"string\"}[Card description]\n  :field{name=\"content\" type=\"string\"}[Card content]\n  :field{name=\"footer\" type=\"string\"}[Card footer]\n  :field{name=\"icon\" type=\"string\"}[Card icon]\n  :field{name=\"horizontal\" type=\"boolean\" default-value=\"false\"}\n  :field{name=\"to\" type=\"string\"}[Link URL]\n  :field{name=\"target\" type=\"Target\"}[A `target` attribute value to apply on the link]\n  :field{name=\"iconSize\" type=\"number\" default-value=\"24\"}\n  :field{name=\"img\" type=\"string\"}[Image URL]\n  :field{name=\"showLinkIcon\" type=\"boolean\" default-value=\"true\"}[Whether to show the link indicator :icon{name=\"lucide:arrow-up-right\"}]\n::\n",
        "icon": "lucide:square",
        "badges": [
          {
            "value": "Nuxt UI Pro",
            "to": "https://ui.nuxt.com/pro/prose/card",
            "target": "_blank"
          },
          {
            "value": "Docus",
            "to": "https://docus.dev/api/components#card",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Card.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "Card Group",
        "_path": "2.docs/card-group.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4\"}\n    ::card-group\n      ::card\n      ---\n      title: Components\n      icon: lucide:box\n      to: https://nuxt.com/docs/api/components/client-only\n      target: _blank\n      ---\n      Explore Nuxt built-in components for pages, layouts, head, and more.\n      ::\n      ::card\n      ---\n      title: Composables\n      icon: lucide:arrow-right-left\n      to: https://nuxt.com/docs/api/composables/use-app-config\n      target: _blank\n      ---\n      Discover Nuxt composable functions for data-fetching, head management and more.\n      ::\n      ::card\n      ---\n      title: Utils\n      icon: lucide:scissors\n      to: https://nuxt.com/docs/api/utils/dollarfetch\n      target: _blank\n      ---\n      Learn about Nuxt utility functions for navigation, error handling and more.\n      ::\n      ::card\n      ---\n      title: Commands\n      icon: lucide:square-terminal\n      to: https://nuxt.com/docs/api/commands/add\n      target: _blank\n      ---\n      List of Nuxt CLI commands to init, analyze, build, and preview your application.\n      ::\n    ::\n  ::\n  ```mdc\n  ::card-group\n    ::card\n    ---\n    title: Components\n    icon: lucide:box\n    to: https://nuxt.com/docs/api/components/client-only\n    target: _blank\n    ---\n    Explore Nuxt built-in components for pages, layouts, head, and more.\n    ::\n\n    ::card\n    ---\n    title: Composables\n    icon: lucide:arrow-right-left\n    to: https://nuxt.com/docs/api/composables/use-app-config\n    target: _blank\n    ---\n    Discover Nuxt composable functions for data-fetching, head management and more.\n    ::\n\n    ::card\n    ---\n    title: Utils\n    icon: lucide:scissors\n    to: https://nuxt.com/docs/api/utils/dollarfetch\n    target: _blank\n    ---\n    Learn about Nuxt utility functions for navigation, error handling and more.\n    ::\n\n    ::card\n    ---\n    title: Commands\n    icon: lucide:square-terminal\n    to: https://nuxt.com/docs/api/commands/add\n    target: _blank\n    ---\n    List of Nuxt CLI commands to init, analyze, build, and preview your application.\n    ::\n  ::\n  ```\n::\n",
        "icon": "lucide:layout-grid",
        "badges": [
          {
            "value": "Nuxt UI Pro",
            "to": "https://ui.nuxt.com/pro/prose/card-group",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/CardGroup.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "Code Group",
        "_path": "2.docs/code-group.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4\"}\n    ::code-group\n      ```vue [app.vue]\n      <template>\n        <div>\n          <NuxtLayout>\n            <NuxtPage />\n          </NuxtLayout>\n        </div>\n      </template>\n      ```\n\n      ```vue [pages/index.vue]\n      <template>\n        <div>\n          <h1>Welcome to the homepage</h1>\n          <AppAlert>\n            This is an auto-imported component\n          </AppAlert>\n        </div>\n      </template>\n      ```\n    ::\n  ::\n\n  ```mdc\n  ::code-group\n    ```vue [app.vue]\n    <template>\n      <div>\n        <NuxtLayout>\n          <NuxtPage />\n        </NuxtLayout>\n      </div>\n    </template>\n    ```\n\n    ```vue [pages/index.vue]\n    <template>\n      <div>\n        <h1>Welcome to the homepage</h1>\n        <AppAlert>\n          This is an auto-imported component\n        </AppAlert>\n      </div>\n    </template>\n    ```\n  ::\n  ```\n::\n\n::alert{to=\"/components/docs/tabs\"}\n`::code-group`{lang=\"mdc\"} is a wrapper around `::tabs{variant=\"card\"}`{lang=\"mdc\"}.\n::\n\n## Props\n\n:field{name=\"sync\" type=\"string\"}[Sync scope for `::tabs`]\n",
        "icon": "lucide:code-xml",
        "badges": [
          {
            "value": "Nuxt UI Pro",
            "to": "https://ui.nuxt.com/pro/prose/code-group",
            "target": "_blank"
          },
          {
            "value": "Docus",
            "to": "https://docus.dev/api/components#codegroup",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/CodeGroup.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "Code Snippet",
        "_path": "2.docs/code-snippet.md",
        "content": "\n\n## Usage\n\n::stack\n::div{class=\"p-4\"}\n  ::code-snippet\n  ---\n  file: /components/DarkModeToggle.vue\n  language: vue\n  ---\n  ::\n::\n```mdc\n::code-snippet\n---\nfile: /components/DarkModeToggle.vue\nlanguage: vue\n---\n::\n```\n::\n\n### Highlighting Lines\n\n::stack\n::div{class=\"p-4\"}\n  ::code-snippet\n  ---\n  file: /composables/useBreadcrumb.ts\n  language: ts\n  title: useBreadcrumb\n  highlights: 9-11\n  meta: line-numbers height=300\n  ---\n  ::\n::\n```mdc\n::code-snippet\n---\nfile: /composables/useBreadcrumb.ts\nlanguage: ts\ntitle: useBreadcrumb\nhighlights: 9-11\nmeta: line-numbers height=300\n---\n::\n```\n::\n\nTranslates to:\n\n`````md\n````ts [useBreadcrumb] {9-11} line-numbers height=300\n// code imported from /composables/useBreadcrumb.ts\n````\n`````\n\n### Using Offset Props\n\n::stack\n::div{class=\"p-4\"}\n  ::code-snippet\n  ---\n  file: /composables/useBreadcrumb.ts\n  language: ts\n  start: 6\n  offset: 4\n  ---\n  ::\n::\n```mdc\n::code-snippet\n---\nfile: /composables/useBreadcrumb.ts\nlanguage: ts\nstart: 6\noffset: 4\n---\n::\n```\n::\n\n### Fetching From a Remote URL\n\n::stack\n::div{class=\"p-4\"}\n  ::code-snippet\n  ---\n  url: https://raw.githubusercontent.com/ZTL-UwU/shadcn-docs-nuxt/refs/heads/main/pages/index.vue\n  language: vue\n  ---\n  ::\n::\n```mdc\n::code-snippet\n---\nurl: https://raw.githubusercontent.com/ZTL-UwU/shadcn-docs-nuxt/refs/heads/main/pages/index.vue\nlanguage: vue\n---\n::\n```\n::\n\n## Props\n\n::alert{icon=\"lucide:info\"}\nThe `/nuxt.config.ts` file can not be imported due to framework constraints\n::\n\n::field-group\n  :field{name=\"file\" type=\"string\"}[The path to the imported file]\n  :field{name=\"url\" type=\"string\"}[A remote URL to fetch the code from]\n  :field{name=\"title\" type=\"string\"}[Code block title]\n  :field{name=\"language\" type=\"string\"}[Code block highlight language]\n  :field{name=\"highlights\" type=\"string\"}[Code block highlights lines]\n  :field{name=\"meta\" type=\"string\"}[Code block meta]\n  :field{name=\"start\" type=\"number\"}[Starting line index]\n  :field{name=\"offset\" type=\"number\"}[Number of lines to display from start]\n::\n",
        "icon": "lucide:clipboard",
        "badges": [
          {
            "value": "0.8.11"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/CodeSnippet.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "Field",
        "_path": "2.docs/field.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4\"}\n    ::field{name=\"Field\" type=\"string\" defaultValue=\"'default'\" required}\n    The _description_ can be set as prop or in the default slot with full **markdown** support.\n    ::\n  ::\n  ```mdc\n  ::field{name=\"Field\" type=\"string\" defaultValue=\"'default'\" required}\n  The _description_ can be set as prop or in the default slot with full **markdown** support.\n  ::\n  ```\n::\n\nThe text `required` is configurable in [`main.fieldRequiredText`](/api/configuration/shadcn-docs#main).\n\n## Props\n\n::field-group\n  :field{name=\"name\" type=\"string\"}[Field name]\n  :field{name=\"type\" type=\"string\"}[Field type]\n  :field{name=\"description\" type=\"string\"}[Field description]\n  :field{name=\"defaultValue\" type=\"string\"}[Field default value]\n  :field{name=\"required\" type=\"boolean\"}[Whether the field is required]\n::\n",
        "icon": "lucide:settings-2",
        "badges": [
          {
            "value": "Nuxt UI Pro",
            "to": "https://ui.nuxt.com/pro/prose/field",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Field.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "Field Group",
        "_path": "2.docs/field-group.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4\"}\n    ::field-group\n      ::field{name=\"withDefault\" type=\"boolean\" defaultValue=\"true\"}\n      A field with a default value.\n      ::\n      ::field{name=\"requiredField\" type=\"boolean\" required}\n      A required field.\n      ::\n      ::field{name=\"clear (path?: string)\" type=\"void\"}\n      Clears form errors associated with a specific path. If no path is provided, clears all form errors.\n      ::\n      ::field{name=\"getErrors (path?: string)\" type=\"FormError[]\"}\n      Retrieves form errors associated with a specific path. If no path is provided, returns all form errors.\n      ::\n      ::field{name=\"setErrors (errors: FormError[], path?: string)\" type=\"void\"}\n      Sets form errors for a given path. If no path is provided, overrides all errors.\n      ::\n      ::field{name=\"errors\" type=\"Ref<FormError[]>\"}\n      A reference to the array containing validation errors. Use this to access or manipulate the error information.\n      ::\n    ::\n  ::\n\n  ```mdc\n  ::field-group\n    ::field{name=\"withDefault\" type=\"boolean\" defaultValue=\"true\"}\n    A field with a default value.\n    ::\n    ::field{name=\"requiredField\" type=\"boolean\" required}\n    A required field.\n    ::\n    ::field{name=\"clear (path?: string)\" type=\"void\"}\n    Clears form errors associated with a specific path. If no path is provided, clears all form errors.\n    ::\n    ::field{name=\"getErrors (path?: string)\" type=\"FormError[]\"}\n    Retrieves form errors associated with a specific path. If no path is provided, returns all form errors.\n    ::\n    ::field{name=\"setErrors (errors: FormError[], path?: string)\" type=\"void\"}\n    Sets form errors for a given path. If no path is provided, overrides all errors.\n    ::\n    ::field{name=\"errors\" type=\"Ref<FormError[]>\"}\n    A reference to the array containing validation errors. Use this to access or manipulate the error information.\n    ::\n  ::\n  ```\n::\n",
        "icon": "lucide:settings-2",
        "badges": [
          {
            "value": "Nuxt UI Pro",
            "to": "https://ui.nuxt.com/pro/prose/field-group",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/FieldGroup.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "File Tree",
        "_path": "2.docs/file-tree.md",
        "content": "\n\n## Usage\n\n::stack\n::div{class=\"p-4\"}\n  ::file-tree\n  ---\n  tree:\n    - app:\n      - components:\n        - Header.vue\n        - Footer.vue\n      - composables:\n        - useErrorHandler.ts\n      - ^app.vue^\n    - docs:\n      - index.md\n  ---\n  ::\n::\n```mdc\n::file-tree\n---\ntree:\n  - app:\n    - components:\n      - Header.vue\n      - Footer.vue\n    - composables:\n      - useErrorHandler.ts\n    - ^app.vue^ # This is highlighted\n  - docs:\n    - index.md\n---\n::\n```\n::\n\n### Customizations\n\n::stack\n::div{class=\"p-4\"}\n  ::file-tree\n  ---\n  title: File Tree Title\n  icon: lucide:folder-tree\n  autoSlash: false   # Whether to add a slash after every folder automatically\n  showArrow: true    # Whether to show the guide arrow\n  tree:\n    - components:\n      - layout:\n        - Header.vue\n        - Footer.vue\n        - ...\n      - content:\n        - Accordion.vue\n        - Alert.vue\n        - ProseCode.vue\n        - ...\n  ---\n  ::\n::\n```mdc\n::file-tree\n---\ntitle: File Tree Title\nicon: lucide:folder-tree\nautoSlash: false   # Whether to add a slash after every folder automatically\nshowArrow: true    # Whether to show the collapse arrow\ntree:\n  - components:\n    - layout:\n      - Header.vue\n      - Footer.vue\n      - ...\n    - content:\n      - Accordion.vue\n      - Alert.vue\n      - ProseCode.vue\n      - ...\n---\n::\n```\n::\n\n### Disable Icons\n\n::stack\n::div{class=\"p-4\"}\n  ::file-tree\n  ---\n  showIcon: false\n  tree:\n    - app:\n      - components:\n        - Header.vue\n        - Footer.vue\n      - composables:\n        - useErrorHandler.ts\n      - ^app.vue^\n    - docs:\n      - index.md\n  ---\n  ::\n::\n```mdc\n::file-tree\n---\nshowIcon: false\ntree:\n  - app:\n    - components:\n      - Header.vue\n      - Footer.vue\n    - composables:\n      - useErrorHandler.ts\n    - ^app.vue^\n  - docs:\n    - index.md\n---\n::\n```\n::\n\n## Props\n\n::field-group\n  :field{name=\"tree\"}[The file tree]\n  :field{name=\"title\" type=\"string\"}[File tree title]\n  :field{name=\"icon\" type=\"string\"}[File tree title icon]\n  :field{name=\"autoSlash\" type=\"boolean\" default-value=\"true\"}[Whether to add a slash after every folder automatically]\n  :field{name=\"showArrow\" type=\"boolean\" default-value=\"false\"}[Whether to show the collapse arrow]\n  :field{name=\"showIcon\" type=\"boolean\" default-value=\"true\"}[Whether to show file & folder icons]\n::\n",
        "icon": "lucide:folder-tree",
        "badges": [
          {
            "value": "0.8.10"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/FileTree.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "Icon",
        "_path": "2.docs/icon.md",
        "content": "\n\n::alert{to=\"https://github.com/nuxt-modules/icon\" target=\"_blank\"}\nThe icon component uses **Nuxt Icon** under the hood. Check out the usage guide from Nuxt Icon.\n::\n\n## Usage\n\n::stack\n  ::div{class=\"p-4 space-x-2\"}\n    :icon{name=\"lucide:box\"}\n    :icon{name=\"vscode-icons:file-type-js-official\"}\n    :icon{name=\"vscode-icons:file-type-vue\"}\n    :icon{name=\"vscode-icons:file-type-nuxt\" size=\"30\"}\n  ::\n\n  ```mdc\n  :icon{name=\"lucide:box\"}\n  :icon{name=\"vscode-icons:file-type-js-official\"}\n  :icon{name=\"vscode-icons:file-type-vue\"}\n  :icon{name=\"vscode-icons:file-type-nuxt\" size=\"30\"}\n  ```\n::\n\nIf you want to use other icons, it is highly recommended to install them locally, which is faster and more reliable on both SSR and client-side.\n\n```bash [Terminal]\nnpm i -D @iconify-json/collection-name\n```\n\n`@iconify-json/lucide` and `@iconify-json/vscode-icons` are installed by default.\n\n### Smart Icon\n\n:badge[0.5.3]{variant=\"outline\"}\n\nYou can put iconify icons, emojis and urls in `smart-icon`. Smart icon will render them automatically.\n\n::stack\n  ::div{class=\"p-4\"}\n    **Iconify**\n    <div class=\"space-x-2\">\n\n    :smart-icon{name=\"lucide:box\"}\n    :smart-icon{name=\"vscode-icons:file-type-js-official\"}\n    :smart-icon{name=\"vscode-icons:file-type-vue\"}\n\n    </div>\n\n    **Emojis**\n    <div class=\"space-x-2\">\n\n    :smart-icon{name=\"😍\"}\n    :smart-icon{name=\"🚀\"}\n    :smart-icon{name=\"🎉\" size=30}\n\n    </div>\n\n    **URL**\n    <div class=\"space-x-2\">\n\n    :smart-icon{name=\"/logo.svg\"}\n    :smart-icon{name=\"https://vueuse.org/favicon.svg\" size=40}\n\n    </div>\n  ::\n\n  ```mdc\n  **Iconify**\n  :smart-icon{name=\"lucide:box\"}\n  :smart-icon{name=\"vscode-icons:file-type-js-official\"}\n  :smart-icon{name=\"vscode-icons:file-type-vue\"}\n\n  **Emojis**\n  :smart-icon{name=\"😍\"}\n  :smart-icon{name=\"🚀\"}\n  :smart-icon{name=\"🎉\" size=30}\n\n  **URL**\n  :smart-icon{name=\"/logo.svg\"}\n  :smart-icon{name=\"https://vueuse.org/favicon.svg\" size=40}\n  ```\n::\n",
        "icon": "lucide:star",
        "badges": [
          {
            "value": "Docus",
            "to": "https://docus.dev/api/components#icon",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Icon.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "Package Manager",
        "_path": "2.docs/pm.md",
        "content": "\n\n## Usage\n\nThe package managers shown can be configured in [`main.pm`](/api/configuration/shadcn-docs#main).\n\n### Install\n\n::stack\n  ::div{class=\"p-4\"}\n    :pm-install{name=\"shadcn-docs-nuxt\"}\n    :pm-install{name=\"shadcn-docs-nuxt\" save-dev}\n    :pm-install\n    :pm-install{name=\"-g nuxi@latest\"}\n  ::\n  ```mdc\n  :pm-install{name=\"shadcn-docs-nuxt\"}\n  :pm-install{name=\"shadcn-docs-nuxt\" save-dev}\n  :pm-install\n  :pm-install{name=\"-g nuxi@latest\"}\n  ```\n::\n\n### Run\n\n::stack\n  ::div{class=\"p-4\"}\n    :pm-run{script=\"dev\"}\n    :pm-run{script=\"build --watch -o\"}\n  ::\n  ```mdc\n  :pm-run{script=\"dev\"}\n  :pm-run{script=\"build --watch -o\"}\n  ```\n::\n\n### X\n\n::stack\n  ::div{class=\"p-4\"}\n  :pm-x{command=\"nuxi@latest init <project-name>\"}\n  ::\n  ```mdc\n  :pm-x{command=\"nuxi@latest init <project-name>\"}\n  ```\n::\n\n### No Sync\n\n::stack\n  ::div{class=\"p-4\"}\n    :pm-x{command=\"nuxi@latest init <project-name>\" no-sync}\n  ::\n  ```mdc\n  :pm-x{command=\"nuxi@latest init <project-name>\" no-sync}\n  ```\n::\n",
        "icon": "lucide:package",
        "description": "",
        "badges": [
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/PmInstall.vue",
            "target": "_blank"
          },
          {
            "value": "0.8.0"
          }
        ]
      },
      {
        "title": "Read More",
        "_path": "2.docs/read-more.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4\"}\n    :read-more{to=\"/getting-started/writing/markdown\"}\n    :read-more{title=\"Nuxt website\" to=\"https://nuxt.com/\"}\n    :read-more{to=\"https://nuxt.com/\"}\n    :read-more{icon=\"lucide:link\" to=\"https://nuxt.com/\"}\n  ::\n\n  ```mdc\n  :read-more{to=\"/getting-started/writing/markdown\"}\n  :read-more{title=\"Nuxt website\" to=\"https://nuxt.com/\"}\n  :read-more{to=\"https://nuxt.com/\"}\n  :read-more{icon=\"lucide:link\" to=\"https://nuxt.com/\"}\n  ```\n::\n\n## Props\n\n::field-group\n  :field{name=\"title\" type=\"string\"}[Read More title]\n  :field{name=\"icon\" type=\"string\"}[Read More icon]\n  :field{name=\"to\" type=\"string\"}[Link URL]\n  :field{name=\"target\" type=\"Target\"}[A `target` attribute value to apply on the link]\n::\n",
        "icon": "lucide:bookmark",
        "badges": [
          {
            "value": "undocs",
            "to": "https://undocs.pages.dev/guide/components#read-more",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/ReadMore.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "Shortcut",
        "_path": "2.docs/shortcut.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4\"}\n    :shortcut{value=\"meta\"} :shortcut{value=\"K\"} :br\n    :shortcut{value=\"xs\" size=\"xs\"} :shortcut{value=\"sm\"} :shortcut{value=\"md\" size=\"md\"}\n  ::\n  ```mdc\n  :shortcut{value=\"meta\"} :shortcut{value=\"K\"}\n\n  :shortcut{value=\"xs\" size=\"xs\"} :shortcut{value=\"sm\"} :shortcut{value=\"md\" size=\"md\"}\n  ```\n::\n\nYou can put `meta` in the `value` field to automatically display either :shortcut{value=\"⌘\"} or :shortcut{value=\"Ctrl\"} based on the platform.\n\n## Props\n\n::field-group\n  :field{name=\"value\" type=\"string\"}[Text in the shortcut]\n  :field{name=\"size\" type=\"'xs' | 'sm' | 'md'\" default-value=\"'sm'\"}\n::\n",
        "icon": "lucide:keyboard",
        "badges": [
          {
            "value": "Nuxt UI Pro",
            "to": "https://ui.nuxt.com/pro/prose/shortcut",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Shortcut.vue",
            "target": "_blank"
          },
          {
            "value": "0.6.3"
          }
        ]
      },
      {
        "title": "Stack",
        "_path": "2.docs/stack.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4 md:p-8\"}\n    ::stack\n      ::div{class=\"p-6 text-3xl font-bold\"}\n      ✨ Introducing Inspira UI\n      ::\n      ```vue\n      <template>\n        <RadiantText\n          class=\"inline-flex items-center justify-center px-4 py-1 transition ease-out hover:text-neutral-600 hover:duration-300 hover:dark:text-neutral-400\"\n          :duration=\"5\"\n        >\n          <span class=\"text-3xl font-bold\">✨ Introducing Inspira UI</span>\n        </RadiantText>\n      </template>\n      ```\n      :pm-install{name=\"@inspira-ui/plugins\" save-dev}\n      :read-more{title=\"Inspira UI Docs\" to=\"https://inspira-ui.com/components/radiant-text\"}\n      ::card\n      ---\n      title: Commands\n      icon: lucide:square-terminal\n      ---\n      List of Nuxt CLI commands to init, analyze, build, and preview your application.\n      ::\n    ::\n  ::\n  ```mdc\n  ::stack\n    ::div{class=\"p-6 text-3xl font-bold\"}\n    ✨ Introducing Inspira UI\n    ::\n    ```vue\n    <template>\n      <RadiantText\n        class=\"inline-flex items-center justify-center px-4 py-1 transition ease-out hover:text-neutral-600 hover:duration-300 hover:dark:text-neutral-400\"\n        :duration=\"5\"\n      >\n        <span class=\"text-3xl font-bold\">✨ Introducing Inspira UI</span>\n      </RadiantText>\n    </template>\n    ```\n    :pm-install{name=\"@inspira-ui/plugins\" save-dev}\n    :read-more{title=\"Inspira UI Docs\" to=\"https://inspira-ui.com/components/radiant-text\"}\n    ::card\n    ---\n    title: Commands\n    icon: lucide:square-terminal\n    ---\n    List of Nuxt CLI commands to init, analyze, build, and preview your application.\n    ::\n  ::\n  ```\n::\n\nStackable components:\n\n- `div`\n- Code Blocks\n- `alert`\n- `callout`\n- `read-more`\n- `code-group`\n- `card`\n- `tabs`\n- `pm-install`\n- `pm-run`\n- `pm-x`\n",
        "icon": "lucide:rows-3",
        "badges": [
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Stack.vue",
            "target": "_blank"
          },
          {
            "value": "0.6.2"
          }
        ]
      },
      {
        "title": "Steps",
        "_path": "2.docs/steps.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4 md:p-6\"}\n    ::steps\n      ### Get Starter Template\n\n      ::code-group\n        ```bash [npm]\n        npx nuxi@latest init <project-name> -t github:ZTL-UwU/shadcn-docs-nuxt-starter\n        ```\n        ```bash [pnpm]\n        pnpm dlx nuxi@latest init <project-name> -t github:ZTL-UwU/shadcn-docs-nuxt-starter\n        ```\n        ```bash [bun]\n        bunx nuxi@latest init <project-name> -t github:ZTL-UwU/shadcn-docs-nuxt-starter\n        ```\n      ::\n\n      ::alert\n      Alternatively, you can clone or download the template from the [GitHub repo](https://github.com/ZTL-UwU/shadcn-docs-nuxt-starter).\n      ::\n\n      ### Install Dependencies\n\n      ::code-group\n        ```bash [npm]\n        npm install\n        ```\n        ```bash [pnpm]\n        pnpm install\n        ```\n        ```bash [bun]\n        bun install\n        ```\n      ::\n\n      ### Development Server\n\n      ::code-group\n        ```bash [npm]\n        npm run dev -- -o\n        ```\n        ```bash [pnpm]\n        pnpm dev -o\n        ```\n        ```bash [bun]\n        bun run dev -o\n        ```\n      ::\n    ::\n  ::\n  ```mdc height=400\n  ::steps\n    ### Get Starter Template\n\n    ::code-group\n      ```bash [npm]\n      npx nuxi@latest init <project-name> -t github:ZTL-UwU/shadcn-docs-nuxt-starter\n      ```\n      ```bash [pnpm]\n      pnpm dlx nuxi@latest init <project-name> -t github:ZTL-UwU/shadcn-docs-nuxt-starter\n      ```\n      ```bash [bun]\n      bunx nuxi@latest init <project-name> -t github:ZTL-UwU/shadcn-docs-nuxt-starter\n      ```\n    ::\n\n    ::alert\n    Alternatively, you can clone or download the template from the [GitHub repo](https://github.com/ZTL-UwU/shadcn-docs-nuxt-starter).\n    ::\n\n    ### Install Dependencies\n\n    ::code-group\n      ```bash [npm]\n      npm install\n      ```\n      ```bash [pnpm]\n      pnpm install\n      ```\n      ```bash [bun]\n      bun install\n      ```\n    ::\n\n    ### Development Server\n\n    ::code-group\n      ```bash [npm]\n      npm run dev -- -o\n      ```\n      ```bash [pnpm]\n      pnpm dev -o\n      ```\n      ```bash [bun]\n      bun run dev -o\n      ```\n    ::\n  ::\n  ```\n::\n\n### Multi-level headings\n:badge[0.4.6]{variant=\"outline\"}\n\n::stack\n  ::div{class=\"p-4 md:p-6\"}\n    ::steps{level=5}\n      ##### Specify the level of headings to use\n\n      ```mdc\n      ::steps{level=5}\n      ```\n\n      ##### Available Headings\n\n      `h1` through `h6`. Defaults to `h3`.\n    ::\n  ::\n  ```mdc\n  ::steps{level=5}\n    ##### Multi-level headings\n\n    ```mdc\n    ::steps{level=5}\n    ```\n\n    ##### Available Headings\n\n    `h1` through `h6`. Defaults to `h3`.\n  ::\n  ```\n::\n\n## Props\n\n:field{name=\"level\" type=\"number\"}[Specify the level of headings to use]\n",
        "icon": "lucide:arrow-down-0-1",
        "badges": [
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Steps.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "Tabs",
        "_path": "2.docs/tabs.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4\"}\n    ::tabs\n      ::div{label=\"PostgreSQL\" icon=\"lucide:database\"}\n      ### PostgreSQL column types\n\n      ```ts\n      import { integer, pgTable } from 'drizzle-orm/pg-core';\n\n      export const table = pgTable('table', {\n        int: integer('int')\n      });\n      ```\n      ::\n      ::div{label=\"MySQL\"}\n      ### MySQL column types\n\n      ```ts\n      import { int, mysqlTable } from 'drizzle-orm/mysql-core';\n\n      const table = mysqlTable('table', {\n        int: int('int')\n      });\n      ```\n      ::\n      ::div{label=\"SQLite\"}\n      ### SQLite column types\n\n      ```ts\n      import { integer, sqliteTable } from 'drizzle-orm/sqlite-core';\n\n      const table = sqliteTable('table', {\n        id: integer('id')\n      });\n\n      // you can customize integer mode to be number, boolean, timestamp, timestamp_ms\n      integer('id', { mode: 'number' });\n      integer('id', { mode: 'boolean' });\n      integer('id', { mode: 'timestamp_ms' });\n      integer('id', { mode: 'timestamp' }); // Date\n      ```\n      ::\n    ::\n  ::\n  ```mdc height=300\n  ::tabs\n    ::div{label=\"PostgreSQL\" icon=\"lucide:database\"}\n    ### PostgreSQL column types\n\n    ```ts\n    import { integer, pgTable } from 'drizzle-orm/pg-core';\n\n    export const table = pgTable('table', {\n      int: integer('int')\n    });\n    ```\n    ::\n    ::div{label=\"MySQL\"}\n    ### MySQL column types\n\n    ```ts\n    import { int, mysqlTable } from 'drizzle-orm/mysql-core';\n\n    const table = mysqlTable('table', {\n      int: int('int')\n    });\n    ```\n    ::\n    ::div{label=\"SQLite\"}\n    ### SQLite column types\n\n    ```ts\n    import { integer, sqliteTable } from 'drizzle-orm/sqlite-core';\n\n    const table = sqliteTable('table', {\n      id: integer('id')\n    });\n\n    // you can customize integer mode to be number, boolean, timestamp, timestamp_ms\n    integer('id', { mode: 'number' });\n    integer('id', { mode: 'boolean' });\n    integer('id', { mode: 'timestamp_ms' });\n    integer('id', { mode: 'timestamp' }); // Date\n    ```\n    ::\n  ::\n  ```\n::\n\n### Card Style\n\n::stack\n  ::div{class=\"p-4\"}\n    ::tabs{variant=\"card\"}\n      ::div{label=\"Card Tab\"}\n      ### This is a card-style tab\n      ::\n      ::div{label=\"Tab 2\" icon=\"lucide:atom\"}\n      This is Tab #2\n      ::\n      ```ts [Code Tab]\n      console.log('Hello World!');\n      ```\n    ::\n  ::\n  ```mdc\n  ::tabs{variant=\"card\"}\n    ::div{label=\"Card Tab\"}\n    ### This is a card-style tab\n    ::\n    ::div{label=\"Tab 2\" icon=\"lucide:atom\"}\n    This is Tab #2\n    ::\n    ```ts [Code Tab]\n    console.log('Hello World!');\n    ```\n  ::\n  ```\n::\n\n### Line Style\n:badge[0.6.4]{variant=\"outline\"}\n\n::stack\n  ::div{class=\"p-4\"}\n    ::tabs{variant=\"line\"}\n      ::div{label=\"Preview\" class=\"border flex min-h-[200px] w-full justify-center p-10 items-center rounded-lg shadow-sm\"}\n        :badge[Badge]\n      ::\n      ::div{label=\"Code\"}\n        ```tsx\n        import { Badge } from \"@/components/ui/badge\"\n\n        export function BadgeDemo() {\n          return <Badge>Badge</Badge>\n        }\n        ```\n      ::\n    ::\n  ::\n  ```mdc\n  ::tabs{variant=\"line\"}\n    ::div{label=\"Preview\" class=\"border flex min-h-[200px] w-full justify-center p-10 items-center rounded-lg shadow-sm\"}\n      :badge[Badge]\n    ::\n    ::div{label=\"Code\"}\n      ```tsx\n      import { Badge } from \"@/components/ui/badge\"\n\n      export function BadgeDemo() {\n        return <Badge>Badge</Badge>\n      }\n      ```\n    ::\n  ::\n  ```\n::\n\n### Combobox Style\n:badge[0.7.5]{variant=\"outline\"}\n\n::stack\n  ::div{class=\"p-4\"}\n    ::tabs{variant=\"combobox\" search-placeholder=\"Search database...\" search-empty=\"No database found.\"}\n      ::div{label=\"PostgreSQL\"}\n      ### PostgreSQL column types\n\n      ```ts\n      import { integer, pgTable } from 'drizzle-orm/pg-core';\n\n      export const table = pgTable('table', {\n        int: integer('int')\n      });\n      ```\n      ::\n      ::div{label=\"MySQL\"}\n      ### MySQL column types\n\n      ```ts\n      import { int, mysqlTable } from 'drizzle-orm/mysql-core';\n\n      const table = mysqlTable('table', {\n        int: int('int')\n      });\n      ```\n      ::\n      ::div{label=\"SQLite\"}\n      ### SQLite column types\n\n      ```ts\n      import { integer, sqliteTable } from 'drizzle-orm/sqlite-core';\n\n      const table = sqliteTable('table', {\n        id: integer('id')\n      });\n\n      // you can customize integer mode to be number, boolean, timestamp, timestamp_ms\n      integer('id', { mode: 'number' });\n      integer('id', { mode: 'boolean' });\n      integer('id', { mode: 'timestamp_ms' });\n      integer('id', { mode: 'timestamp' }); // Date\n      ```\n      ::\n    ::\n  ::\n  ```mdc height=300\n  ::tabs{variant=\"combobox\" search-placeholder=\"Search database...\" search-empty=\"No database found.\"}\n    ::div{label=\"PostgreSQL\"}\n    ### PostgreSQL column types\n\n    ```ts\n    import { integer, pgTable } from 'drizzle-orm/pg-core';\n\n    export const table = pgTable('table', {\n      int: integer('int')\n    });\n    ```\n    ::\n    ::div{label=\"MySQL\"}\n    ### MySQL column types\n\n    ```ts\n    import { int, mysqlTable } from 'drizzle-orm/mysql-core';\n\n    const table = mysqlTable('table', {\n      int: int('int')\n    });\n    ```\n    ::\n    ::div{label=\"SQLite\"}\n    ### SQLite column types\n\n    ```ts\n    import { integer, sqliteTable } from 'drizzle-orm/sqlite-core';\n\n    const table = sqliteTable('table', {\n      id: integer('id')\n    });\n\n    // you can customize integer mode to be number, boolean, timestamp, timestamp_ms\n    integer('id', { mode: 'number' });\n    integer('id', { mode: 'boolean' });\n    integer('id', { mode: 'timestamp_ms' });\n    integer('id', { mode: 'timestamp' }); // Date\n    ```\n    ::\n  ::\n  ```\n::\n\n### Synced Tabs\n:badge[0.8.0]{variant=\"outline\"}\n\n:read-more{to=\"/components/docs/pm\"}\n\n::stack\n  ::div{class=\"p-4 md:p-8\"}\n    #### Scope 1\n    ::tabs{variant=\"card\" sync=\"your-scope-name\"}\n      ::div{label=\"Card Tab\"}\n      ### This is a card-style tab\n      ::\n      ```ts [Code Tab]\n      console.log('Hello World!');\n      ```\n    ::\n    ::tabs{variant=\"card\" sync=\"your-scope-name\"}\n      ::div{label=\"Card Tab\"}\n      ### This is a card-style tab\n      ::\n      ::div{label=\"Tab 2\" icon=\"lucide:atom\"}\n      This is Tab #2\n      ::\n      ```ts [Code Tab]\n      console.log('Hello World!');\n      ```\n    ::\n\n    #### Scope 2\n    ::tabs{variant=\"line\" sync=\"scope2\"}\n      ::div{label=\"Card Tab\"}\n      ### This is a card-style tab\n      ::\n      ::div{label=\"Tab 2\" icon=\"lucide:atom\"}\n      This is Tab #2\n      ::\n      ```ts [Code Tab]\n      console.log('Hello World!');\n      ```\n    ::\n    ::tabs{variant=\"separate\" sync=\"scope2\"}\n      ::div{label=\"Card Tab\"}\n      ### This is a card-style tab\n      ::\n      ::div{label=\"Tab 2\" icon=\"lucide:atom\"}\n      This is Tab #2\n      ::\n      ```ts [Code Tab]\n      console.log('Hello World!');\n      ```\n    ::\n  ::\n  ```mdc height=400\n  #### Scope 1\n  ::tabs{variant=\"card\" sync=\"your-scope-name\"}\n    ::div{label=\"Card Tab\"}\n    ### This is a card-style tab\n    ::\n    ```ts [Code Tab]\n    console.log('Hello World!');\n    ```\n  ::\n  ::tabs{variant=\"card\" sync=\"your-scope-name\"}\n    ::div{label=\"Card Tab\"}\n    ### This is a card-style tab\n    ::\n    ::div{label=\"Tab 2\" icon=\"lucide:atom\"}\n    This is Tab #2\n    ::\n    ```ts [Code Tab]\n    console.log('Hello World!');\n    ```\n  ::\n\n  #### Scope 2\n  ::tabs{variant=\"line\" sync=\"scope2\"}\n    ::div{label=\"Card Tab\"}\n    ### This is a card-style tab\n    ::\n    ::div{label=\"Tab 2\" icon=\"lucide:atom\"}\n    This is Tab #2\n    ::\n    ```ts [Code Tab]\n    console.log('Hello World!');\n    ```\n  ::\n  ::tabs{variant=\"separate\" sync=\"scope2\"}\n    ::div{label=\"Card Tab\"}\n    ### This is a card-style tab\n    ::\n    ::div{label=\"Tab 2\" icon=\"lucide:atom\"}\n    This is Tab #2\n    ::\n    ```ts [Code Tab]\n    console.log('Hello World!');\n    ```\n  ::\n  ```\n::\n\n## Props\n\n::field-group\n  :field{name=\"variant\" type=\"'separate' | 'card' | 'line' | 'combobox'\" default-value=\"'separate'\"}\n  :field{name=\"padded\" type=\"boolean\" default-value=\"true\"}\n  :field{name=\"disableSearch\" type=\"boolean\" default-value=\"false\"}[For combobox variant]\n  :field{name=\"searchPlaceholder\" type=\"string\" default-value=\"'Search Tab...'\"}[For combobox variant]\n  :field{name=\"searchEmpty\" type=\"string\" default-value=\"'No tab found.'\"}[For combobox variant]\n  :field{name=\"sync\" type=\"string\"}[Sync scope]\n::\n",
        "icon": "lucide:table-2",
        "badges": [
          {
            "value": "Nuxt UI Pro",
            "to": "https://ui.nuxt.com/pro/prose/tabs",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Tabs.vue",
            "target": "_blank"
          }
        ]
      }
    ]
  },
  {
    "title": "3.page",
    "children": [
      {
        "title": "Accordion",
        "_path": "3.page/accordion.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4\"}\n    ::accordion{default-value=\"first-item\" collapsible}\n      ::accordion-item{value=\"first-item\"}\n      #title\n      Is it accessible?\n\n      #content\n      Yes. It adheres to the WAI-ARIA design pattern.\n      ::\n      ::accordion-item\n      #title\n      Is it unstyled?\n\n      #content\n      Yes. It's unstyled by default, giving you freedom over the look and feel.\n      ::\n      :accordion-item{title=\"Can it be animated?\" content=\"Yes! You can use the transition prop to configure the animation.\"}\n    ::\n  ::\n  ```mdc\n  ::accordion{default-value=\"first-item\" collapsible}\n    ::accordion-item{value=\"first-item\"}\n    #title\n    Is it accessible?\n\n    #content\n    Yes. It adheres to the WAI-ARIA design pattern.\n    ::\n\n    ::accordion-item\n    #title\n    Is it unstyled?\n\n    #content\n    Yes. It's unstyled by default, giving you freedom over the look and feel.\n    ::\n    :accordion-item{title=\"Can it be animated?\" content=\"Yes! You can use the transition prop to configure the animation.\"}\n  ::\n  ```\n::\n\nThe `value` prop in `::accordion-item`{lang=\"mdc\"} is auto-generated by default. You can set them to other _unique_ values and put them in the `default-value` prop of `::accordion`{lang=\"mdc\"}.\n\n## Props\n\n#### `::accordion-item`{lang=\"mdc\"}\n\n::field-group\n  :field{name=\"type\" type=\"'single' | 'multiple'\" default-value=\"'single'\"}\n  :field{name=\"collapsible\" type=\"boolean\" default-value=\"undefined\"}[Whether the items can be collapsed]\n  :field{name=\"defaultValue\" type=\"string | string[]\"}[Default open item]\n::\n\n#### `::accordion`{lang=\"mdc\"}\n\n::field-group\n  :field{name=\"value\" type=\"string\"}[Item value]\n  :field{name=\"title\" type=\"string\"}[Item title]\n  :field{name=\"content\" type=\"string\"}[Item content]\n::\n",
        "icon": "lucide:layout-list",
        "badges": [
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Accordion.vue",
            "target": "_blank"
          },
          {
            "value": "0.5.0"
          }
        ]
      },
      {
        "title": "Collapsible",
        "_path": "3.page/collapsible.md",
        "content": "\n\n## Usage\n\n### Simple\n\n::stack\n  ::div{class=\"p-4 md:p-6\"}\n    ::collapsible\n    #title\n    Show properties\n\n    #content\n    This is a **Simple** style collapsible.\n    ::\n  ::\n  ```mdc\n  ::collapsible\n  #title\n  Show properties\n\n  #content\n  This is a **Simple** style collapsible.\n  ::\n  ```\n::\n\n### Card\n\n::stack\n  ::div{class=\"p-4 md:p-6\"}\n    ::collapsible{variant=\"card\" title=\"@peduarte starred 3 repositories\"}\n    @radix-ui/primitives\n    ::\n  ::\n  ```mdc\n  ::collapsible{variant=\"card\" title=\"@peduarte starred 3 repositories\"}\n  @radix-ui/primitives\n  ::\n  ```\n::\n\n## Props\n\n::field-group\n  :field{name=\"variant\" type=\"'simple' | 'card'\" default-value=\"'simple'\"}\n  :field{name=\"title\" type=\"string\"}[Collapsible title]\n  :field{name=\"defaultOpen\" type=\"boolean\" default-value=\"false\"}\n::\n",
        "icon": "lucide:list-collapse",
        "badges": [
          {
            "value": "Nuxt UI Pro",
            "to": "https://ui.nuxt.com/pro/prose/collapsible",
            "target": "_blank"
          },
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Collapsible.vue",
            "target": "_blank"
          },
          {
            "value": "0.5.8"
          }
        ]
      },
      {
        "title": "Hero",
        "_path": "3.page/hero.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4\"}\n    ::hero\n    ---\n    announcement:\n      title: 'Release v1.0.0'\n      icon: 'lucide:party-popper'\n      to: /getting-started\n    actions:\n      - name: Get Started\n        to: /getting-started\n      - name: GitHub\n        variant: outline\n        to: https://github.com/ZTL-UwU/shadcn-docs-nuxt\n        leftIcon: 'lucide:github'\n    ---\n\n    #title\n    Effortless and Beautiful :br Docs Template.\n\n    #description\n    Beautifully designed Nuxt Content template with shadcn-vue. :br Customizable. Compatible. Open Source.\n    ::\n  ::\n  ```mdc\n  ::hero\n  ---\n  announcement:\n    title: 'Release v1.0.0'\n    icon: 'lucide:party-popper'\n    to: /getting-started\n  actions:\n    - name: Get Started\n      to: /getting-started\n    - name: GitHub\n      variant: outline\n      to: https://github.com/ZTL-UwU/shadcn-docs-nuxt\n      leftIcon: 'lucide:github'\n  ---\n\n  #title\n  Effortless and Beautiful :br Docs Template.\n\n  #description\n  Beautifully designed Nuxt Content template with shadcn-vue. :br Customizable. Compatible. Open Source.\n  ::\n  ```\n::\n",
        "icon": "lucide:align-center",
        "badges": [
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/Hero.vue",
            "target": "_blank"
          }
        ]
      },
      {
        "title": "HeroAlt",
        "_path": "3.page/hero-alt.md",
        "content": "\n\n## Usage\n\n::stack\n  ::div{class=\"p-4\"}\n    ::hero-alt\n    ---\n    announcement:\n      title: 'Introducing Charts'\n      icon: 'lucide:pie-chart'\n      to: /getting-started\n    actions:\n      - name: Get Started\n        to: /getting-started\n      - name: GitHub\n        variant: ghost\n        to: https://github.com/ZTL-UwU/shadcn-docs-nuxt\n    ---\n\n    #title\n    Build your component library\n\n    #description\n    Beautifully designed components that you can copy and paste into your apps.\n    ::\n  ::\n  ```mdc\n  ::hero-alt\n  ---\n  announcement:\n    title: 'Introducing Charts'\n    icon: 'lucide:pie-chart'\n    to: /getting-started\n  actions:\n    - name: Get Started\n      to: /getting-started\n    - name: GitHub\n      variant: outline\n      to: https://github.com/ZTL-UwU/shadcn-docs-nuxt\n      leftIcon: 'lucide:github'\n  ---\n\n  #title\n  Build your component library\n\n  #description\n  Beautifully designed components that you can copy and paste into your apps.\n  ::\n  ```\n::\n\n### Right\n\n::stack\n  ::div{class=\"p-4\"}\n    ::hero-alt\n    ---\n    announcement:\n      title: 'Introducing Charts'\n      icon: 'lucide:pie-chart'\n      to: /getting-started\n    actions:\n      - name: Get Started\n        to: /getting-started\n      - name: GitHub\n        variant: ghost\n        to: https://github.com/ZTL-UwU/shadcn-docs-nuxt\n    mobileRight: 'top' # 'top' | 'bottom'\n    ---\n\n    #title\n    Build your component library\n\n    #description\n    Beautifully designed components that you can copy and paste into your apps.\n\n    #right\n    ![logo](/logo.svg)\n    ::\n  ::\n  ```mdc\n  ::hero-alt\n  ---\n  announcement:\n    title: 'Introducing Charts'\n    icon: 'lucide:pie-chart'\n    to: /getting-started\n  actions:\n    - name: Get Started\n      to: /getting-started\n    - name: GitHub\n      variant: ghost\n      to: https://github.com/ZTL-UwU/shadcn-docs-nuxt\n  mobileRight: 'top' # 'top' | 'bottom'\n  ---\n\n  #title\n  Build your component library\n\n  #description\n  Beautifully designed components that you can copy and paste into your apps.\n\n  #right\n  ![logo](/logo.svg)\n  ::\n  ```\n::\n",
        "icon": "lucide:align-left",
        "badges": [
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/HeroAlt.vue",
            "target": "_blank"
          },
          {
            "value": "0.4.0"
          }
        ],
        "toc": false
      },
      {
        "title": "Team Card",
        "_path": "3.page/team-card.md",
        "content": "\n\n::stack\n  ::div{class=\"p-4\"}\n    ::team-card-group\n      ::team-card\n      ---\n      avatar: https://www.github.com/ZTL-UwU.png\n      name: Tony Zhang\n      title: Author of shadcn-docs-nuxt\n      links:\n        - icon: lucide:github\n          to: https://github.com/ZTL-UwU\n        - icon: lucide:twitter\n          to: https://x.com/ZTL_UwU\n        - icon: lucide:coffee\n          to: https://ko-fi.com/ztl_uwu\n      ---\n      ::\n\n      ::team-card\n      ---\n      center: false\n      avatar: https://www.github.com/ZTL-UwU.png\n      name: Tony Zhang\n      title: Author of shadcn-docs-nuxt\n      links:\n        - icon: lucide:github\n          to: https://github.com/ZTL-UwU\n        - icon: lucide:twitter\n          to: https://x.com/ZTL_UwU\n        - icon: lucide:coffee\n          to: https://ko-fi.com/ztl_uwu\n      ---\n      ::\n    ::\n  ::\n  ```mdc\n  ::team-card-group\n    ::team-card\n    ---\n    avatar: https://www.github.com/ZTL-UwU.png\n    name: Tony Zhang\n    title: Author of shadcn-docs-nuxt\n    links:\n      - icon: lucide:github\n        to: https://github.com/ZTL-UwU\n      - icon: lucide:twitter\n        to: https://x.com/ZTL_UwU\n      - icon: lucide:coffee\n        to: https://ko-fi.com/ztl_uwu\n    ---\n    ::\n\n    ::team-card\n    ---\n    center: false\n    avatar: https://www.github.com/ZTL-UwU.png\n    name: Tony Zhang\n    title: Author of shadcn-docs-nuxt\n    links:\n      - icon: lucide:github\n        to: https://github.com/ZTL-UwU\n      - icon: lucide:twitter\n        to: https://x.com/ZTL_UwU\n      - icon: lucide:coffee\n        to: https://ko-fi.com/ztl_uwu\n    ---\n    ::\n  ::\n  ```\n::\n",
        "icon": "lucide:users",
        "description": "",
        "badges": [
          {
            "value": "Source",
            "icon": "lucide:code",
            "to": "https://github.com/ZTL-UwU/shadcn-docs-nuxt/blob/main/components/content/TeamCard.vue",
            "target": "_blank"
          },
          {
            "value": "0.7.7"
          }
        ]
      }
    ]
  },
  {
    "title": "Prose Components",
    "_path": "1.prose.md",
    "content": "\n\n## Heading\n\n::stack\n  ::div{class=\"p-4 md:p-8\"}\n  # Heading 1\n  ## Heading 2\n  ### Heading 3\n  #### Heading 4\n  ##### Heading 5\n  ###### Heading 6\n  ::\n\n  ```md\n  # Heading 1\n  ## Heading 2\n  ### Heading 3\n  #### Heading 4\n  ##### Heading 5\n  ###### Heading 6\n  ```\n::\n\n## Link\n\n::stack\n  ::div{class=\"p-4\"}\n  [Link](/getting-started/introduction)\n  ::\n\n  ```md\n  [Link](/getting-started/introduction)\n  ```\n::\n\n## Blockquote\n\n::stack\n  ::div{class=\"p-4\"}\n  > Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  ::\n\n  ```md\n  > Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  ```\n::\n\n## Code Block\n\n::stack\n  ::div{class=\"p-4\"}\n  ```ts\n  export default () => {\n    console.log('Code block');\n  };\n  ```\n  ::\n  ````md\n  ```ts\n  export default () => {\n    console.log('Code block');\n  };\n  ```\n  ````\n::\n\n### With Title\n\n::stack\n  ::div{class=\"p-4\"}\n  ```ts [nuxt.config.ts]\n  export default defineNuxtConfig({\n    // My Nuxt config\n  });\n  ```\n  ::\n  ````md\n  ```ts [nuxt.config.ts]\n  export default defineNuxtConfig({\n    // My Nuxt config\n  });\n  ```\n  ````\n::\n\n### Highlight Lines\n\n::stack\n  ::div{class=\"p-4\"}\n  ```ts{2}\n  export default () => {\n    console.log('Code block');\n  };\n  ```\n  ::\n  ````md\n  ```ts{2}\n  export default () => {\n    console.log('Code block');\n  };\n  ```\n  ````\n::\n\n### Line Numbers\n::stack\n  ::div{class=\"p-4\"}\n  ```ts{1} line-numbers\n  // line-numbers is enabled\n  const line2 = 'This is line 2';\n  const line3 = 'This is line 3';\n  ```\n  ::\n  ````md\n  ```ts{1} line-numbers\n  // line-numbers is enabled\n  const line2 = 'This is line 2';\n  const line3 = 'This is line 3';\n  ```\n  ````\n::\n\n### Fixed Height\n::stack\n  ::div{class=\"p-4\"}\n  ```ts height=150\n  const parsedMeta = computed(() => {\n    const split = meta?.split(' ') ?? [];\n    const params = new Map<string, string | undefined>();\n\n    for (const param of split) {\n      const [key, val] = param.split('=');\n      params.set(key, val);\n    }\n\n    return params;\n  });\n  ```\n  ::\n  ````md\n  ```ts height=150\n  const parsedMeta = computed(() => {\n    const split = meta?.split(' ') ?? [];\n    const params = new Map<string, string | undefined>();\n\n    for (const param of split) {\n      const [key, val] = param.split('=');\n      params.set(key, val);\n    }\n\n    return params;\n  });\n  ```\n  ````\n::\n\n### Custom Icon\n::stack\n  ::div{class=\"p-4\"}\n  ```ts [Custom Icon] icon=lucide:code-xml line-numbers\n  // line-numbers is enabled\n  const line2 = 'This is line 2';\n  const line3 = 'This is line 3';\n  ```\n  ::\n  ````md\n  ```ts [Custom Icon] icon=lucide:code-xml line-numbers\n  // line-numbers is enabled\n  const line2 = 'This is line 2';\n  const line3 = 'This is line 3';\n  ```\n  ````\n::\n\n## Inline Code\n\n::stack\n  ::div{class=\"p-4\"}\n  `code inline`\n\n  `const codeInline: string = 'highlighted code inline'`{lang=\"ts\"}\n  ::\n\n  ```md\n  `code inline`\n\n  `const codeInline: string = 'highlighted code inline'`{lang=\"ts\"}\n  ```\n::\n\n## Horizontal Rule\n\n::stack\n  ::div{class=\"p-4\"}\n  Before\n\n  ---\n\n  After\n  ::\n\n  ```md\n  Before\n\n  ---\n\n  After\n  ```\n::\n\n## Image\n\n::stack\n  ::div{class=\"p-4\"}\n  ![Photo by Drew Beamer](https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80)\n  ::\n\n  ```md\n  ![Photo by Drew Beamer](https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80)\n  ```\n::\n\n## Unordered List\n\n::stack\n  ::div{class=\"p-4\"}\n  - Foo\n  - Bar\n  - Baz\n  ::\n\n  ```md\n  - Foo\n  - Bar\n  - Baz\n  ```\n::\n\n## Ordered List\n\n::stack\n  ::div{class=\"p-4\"}\n  1. Foo\n  2. Bar\n  3. Baz\n  ::\n\n  ```md\n  1. Foo\n  2. Bar\n  3. Baz\n  ```\n::\n\n## Paragraph\n\n::stack\n  ::div{class=\"p-4\"}\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  ::\n\n  ```md\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  ```\n::\n\n## Strong\n\n::stack\n  ::div{class=\"p-4\"}\n  **Just a strong paragraph.**\n  ::\n\n  ```md\n  **Just a strong paragraph.**\n  ```\n::\n\n## Italic\n\n::stack\n  ::div{class=\"p-4\"}\n  _Just an italic paragraph._\n  ::\n\n  ```md\n  _Just an italic paragraph._\n  ```\n::\n\n## Table\n\n::stack\n  ::div{class=\"p-4\"}\n  | Key | Type      | Description                                 |\n  | --- | --------- | ------------------------------------------- |\n  | 1   | Wonderful | Table with `some long code snippet example` |\n  | 2   | Wonderful | Data                                        |\n  | 3   | Wonderful | Website                                     |\n  ::\n\n  ```md\n  | Key | Type      | Description                                 |\n  | --- | --------- | ------------------------------------------- |\n  | 1   | Wonderful | Table with `some long code snippet example` |\n  | 2   | Wonderful | Data                                        |\n  | 3   | Wonderful | Website                                     |\n  ```\n::\n\n## Overview\n\n::stack\n  ::div{class=\"p-8\"}\n  # The Joke Tax Chronicles\n\n  Once upon a time, in a far-off land, there was a very lazy king who spent all day lounging on his throne. One day, his advisors came to him with a problem: the kingdom was running out of money.\n\n  ## The King's Plan\n\n  The king thought long and hard, and finally came up with [a brilliant plan](#): he would tax the jokes in the kingdom.\n\n  > \"After all,\" he said, \"everyone enjoys a good joke, so it's only fair that they should pay for the privilege.\"\n\n  ### The Joke Tax\n\n  The king's subjects were not amused. They grumbled and complained, but the king was firm:\n\n  - 1st level of puns: 5 gold coins\n  - 2nd level of jokes: 10 gold coins\n  - 3rd level of one-liners : 20 gold coins\n\n  As a result, people stopped telling jokes, and the kingdom fell into a gloom. But there was one person who refused to let the king's foolishness get him down: a court jester named Jokester.\n\n  ### Jokester's Revolt\n\n  Jokester began sneaking into the castle in the middle of the night and leaving jokes all over the place: under the king's pillow, in his soup, even in the royal toilet. The king was furious, but he couldn't seem to stop Jokester.\n\n  And then, one day, the people of the kingdom discovered that the jokes left by Jokester were so funny that they couldn't help but laugh. And once they started laughing, they couldn't stop.\n\n  ### The People's Rebellion\n\n  The people of the kingdom, feeling uplifted by the laughter, started to tell jokes and puns again, and soon the entire kingdom was in on the joke.\n\n  | King's Treasury | People's happiness |\n  | :-------------- | :----------------- |\n  | Empty           | Overflowing        |\n  | Modest          | Satisfied          |\n  | Full            | Ecstatic           |\n\n  The king, seeing how much happier his subjects were, realized the error of his ways and repealed the joke tax. Jokester was declared a hero, and the kingdom lived happily ever after.\n\n  The moral of the story is: never underestimate the power of a good laugh and always be careful of bad ideas.\n  ::\n\n  ```md height=400\n  # The Joke Tax Chronicles\n\n  Once upon a time, in a far-off land, there was a very lazy king who spent all day lounging on his throne. One day, his advisors came to him with a problem: the kingdom was running out of money.\n\n  ## The King's Plan\n\n  The king thought long and hard, and finally came up with [a brilliant plan](#): he would tax the jokes in the kingdom.\n\n  > \"After all,\" he said, \"everyone enjoys a good joke, so it's only fair that they should pay for the privilege.\"\n\n  ### The Joke Tax\n\n  The king's subjects were not amused. They grumbled and complained, but the king was firm:\n\n  - 1st level of puns: 5 gold coins\n  - 2nd level of jokes: 10 gold coins\n  - 3rd level of one-liners : 20 gold coins\n\n  As a result, people stopped telling jokes, and the kingdom fell into a gloom. But there was one person who refused to let the king's foolishness get him down: a court jester named Jokester.\n\n  ### Jokester's Revolt\n\n  Jokester began sneaking into the castle in the middle of the night and leaving jokes all over the place: under the king's pillow, in his soup, even in the royal toilet. The king was furious, but he couldn't seem to stop Jokester.\n\n  And then, one day, the people of the kingdom discovered that the jokes left by Jokester were so funny that they couldn't help but laugh. And once they started laughing, they couldn't stop.\n\n  ### The People's Rebellion\n\n  The people of the kingdom, feeling uplifted by the laughter, started to tell jokes and puns again, and soon the entire kingdom was in on the joke.\n\n  | King's Treasury | People's happiness |\n  | :-------------- | :----------------- |\n  | Empty           | Overflowing        |\n  | Modest          | Satisfied          |\n  | Full            | Ecstatic           |\n\n  The king, seeing how much happier his subjects were, realized the error of his ways and repealed the joke tax. Jokester was declared a hero, and the kingdom lived happily ever after.\n\n  The moral of the story is: never underestimate the power of a good laugh and always be careful of bad ideas.\n  ```\n::\n",
    "description": "A showcase of all shadcn-docs prose components.",
    "icon": "lucide:letter-text"
  }
]